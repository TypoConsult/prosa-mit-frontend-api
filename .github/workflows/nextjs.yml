# Sample workflow for building and deploying a Next.js site to GitHub Pages
# Uses pnpm for package management
name: Deploy Next.js site to Pages (pnpm)

on:
  push:
    branches: ["main"]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Install pnpm (stand-alone step so we can control caching ourselves)
      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: "10" # omit if package.json has `"packageManager": "pnpm@<version>"`
          run_install: false # we run pnpm install in a later step

      # Set up Node 20 and enable the built-in pnpm dependency cache
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "pnpm" # <-- turns on automatic pnpm-store caching

      # Install dependencies
      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      # Manually configure for GitHub Pages
      - name: Setup Pages
        uses: actions/configure-pages@v5

      # Build & export the static site
      - name: Build with Next.js
        run: pnpm exec next build
        env:
          NODE_ENV: production

      # Upload the `out` directory produced by `next build`
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./out

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
